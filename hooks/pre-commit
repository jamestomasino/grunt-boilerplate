#!/bin/bash
LOCAL_DIR=$(git rev-parse --show-toplevel)
cd $LOCAL_DIR

function todos {
	#local m=$(trimspace $(git diff --numstat 2> /dev/null | wc -l))
	LOCAL_DIR=$(git rev-parse --show-toplevel 2> /dev/null)
	LOCAL_DIR=${LOCAL_DIR:-.}
	find ${LOCAL_DIR} -type f -exec grep -H -n '(TODO|FIX(ME)?):' {} \; 2> /dev/null 
}

# Require good linting to commit
# exit if task failed
if grunt lint; then

	# File References
	README="$LOCAL_DIR/README.md"
	CHANGELOG="$LOCAL_DIR/CHANGELOG.md"
	TODO="$LOCAL_DIR/TODO.md"

	# Clear the contents from TO DO to the end of file and prepare for appending
	sed -i "" -e '/##\ TODO\ ##/,$ d' $README

	######## TO DO #########
	echo "## TODO ##" > $TODO
	todos >> $TODO

	######## CHANGELOG #########
	# Add a daily breakdown of commits to the project as a changelog to the CHANGELOG
	echo "## COMMIT LOG ##" > $CHANGELOG
	git log --no-merges --format="%cd" --date=short | sort -u -r | while read DATE ; do
		echo >> $CHANGELOG
		echo -e "####$DATE####" >> $CHANGELOG
		echo >> $CHANGELOG
		GIT_PAGER=cat git log --no-merges --format=" * %s (\`%an\`)" --since="$DATE 00:00:00" --until="$DATE 09:00:00" >> $CHANGELOG
		GIT_PAGER=cat git log --no-merges --format=" * __%s__ (\`%an\`)" --since="$DATE 09:00:01" --until="$DATE 17:30:00" >> $CHANGELOG
		GIT_PAGER=cat git log --no-merges --format=" * %s (\`%an\`)" --since="$DATE 17:30:01" --until="$DATE 24:00:00" >> $CHANGELOG
	done
	git add $CHANGELOG

	######## README ###########
	cat $TODO >> $README
	cat $CHANGELOG >> $README

fi
